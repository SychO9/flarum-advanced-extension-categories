{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@sycho/flarum-advanced-extension-categories/webpack/bootstrap","webpack://@sycho/flarum-advanced-extension-categories/webpack/runtime/compat get default export","webpack://@sycho/flarum-advanced-extension-categories/webpack/runtime/define property getters","webpack://@sycho/flarum-advanced-extension-categories/webpack/runtime/hasOwnProperty shorthand","webpack://@sycho/flarum-advanced-extension-categories/webpack/runtime/make namespace object","webpack://@sycho/flarum-advanced-extension-categories/external root \"flarum.reg.get('core', 'admin/app')\"","webpack://@sycho/flarum-advanced-extension-categories/external root \"flarum.reg.get('core', 'common/extend')\"","webpack://@sycho/flarum-advanced-extension-categories/external root \"flarum.reg.get('core', 'admin/components/AdminNav')\"","webpack://@sycho/flarum-advanced-extension-categories/external root \"flarum.reg.get('core', 'admin/components/ExtensionLinkButton')\"","webpack://@sycho/flarum-advanced-extension-categories/external root \"flarum.reg.get('core', 'admin/components/ExtensionsWidget')\"","webpack://@sycho/flarum-advanced-extension-categories/external root \"flarum.reg.get('core', 'admin/components/LoadingModal')\"","webpack://@sycho/flarum-advanced-extension-categories/external root \"flarum.reg.get('core', 'common/utils/ItemList')\"","webpack://@sycho/flarum-advanced-extension-categories/external root \"flarum.reg.get('core', 'common/components/Dropdown')\"","webpack://@sycho/flarum-advanced-extension-categories/external root \"flarum.reg.get('core', 'common/components/Button')\"","webpack://@sycho/flarum-advanced-extension-categories/external root \"flarum.reg.get('core', 'common/components/Icon')\"","webpack://@sycho/flarum-advanced-extension-categories/external root \"flarum.reg.get('core', 'admin/utils/saveSettings')\"","webpack://@sycho/flarum-advanced-extension-categories/external root \"flarum.reg.get('core', 'admin/utils/getCategorizedExtensions')\"","webpack://@sycho/flarum-advanced-extension-categories/external root \"flarum.reg.get('core', 'admin/utils/isExtensionEnabled')\"","webpack://@sycho/flarum-advanced-extension-categories/./src/admin/utils/getCategorizedExtensions.ts","webpack://@sycho/flarum-advanced-extension-categories/./src/admin/utils/getCategories.ts","webpack://@sycho/flarum-advanced-extension-categories/./src/admin/utils/getCategoryLabels.ts","webpack://@sycho/flarum-advanced-extension-categories/./src/admin/utils/getCategorizationOptions.ts","webpack://@sycho/flarum-advanced-extension-categories/external root \"flarum.reg.get('core', 'common/extenders')\"","webpack://@sycho/flarum-advanced-extension-categories/./src/admin/extend.ts","webpack://@sycho/flarum-advanced-extension-categories/./src/admin/index.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'admin/app');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/extend');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'admin/components/AdminNav');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'admin/components/ExtensionLinkButton');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'admin/components/ExtensionsWidget');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'admin/components/LoadingModal');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/utils/ItemList');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/Dropdown');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/Button');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/components/Icon');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'admin/utils/saveSettings');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'admin/utils/getCategorizedExtensions');","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'admin/utils/isExtensionEnabled');","import app from 'flarum/admin/app';\nimport baseGetCategorizedExtensions from 'flarum/admin/utils/getCategorizedExtensions';\nimport isExtensionEnabled from 'flarum/admin/utils/isExtensionEnabled';\nexport default function getCategorizedExtensions() {\n  switch (app.data.settings['sycho-ace.selected-categorization']) {\n    case 'none':\n      return getAlphabeticallyOrderedExtensions();\n    case 'vendor':\n      return getVendorCategorizedExtensions();\n    case 'availability':\n      return getAvailabilityCategorizedExtensions();\n    default:\n      return baseGetCategorizedExtensions();\n  }\n}\nexport function getVendorCategorizedExtensions() {\n  let extensions = {};\n  Object.keys(app.data.extensions).map(id => {\n    const vendor = id.split('-')[0];\n    extensions[vendor] = extensions[vendor] || [];\n    extensions[vendor].push(app.data.extensions[id]);\n  });\n  return extensions;\n}\nexport function getAlphabeticallyOrderedExtensions() {\n  let extensions = {};\n  extensions.none = Object.values(app.data.extensions);\n  return extensions;\n}\nexport function getAvailabilityCategorizedExtensions() {\n  let extensions = {\n    enabled: [],\n    disabled: []\n  };\n  Object.keys(app.data.extensions).map(id => {\n    const category = isExtensionEnabled(id) ? 'enabled' : 'disabled';\n    extensions[category].push(app.data.extensions[id]);\n  });\n  return extensions;\n}\nflarum.reg.add('sycho-advanced-extension-categories', 'admin/utils/getCategorizedExtensions', getCategorizedExtensions);","import app from 'flarum/admin/app';\nexport default function getCategories() {\n  switch (app.data.settings['sycho-ace.selected-categorization']) {\n    case 'none':\n      return {\n        none: 0\n      };\n    case 'vendor':\n      return getVendors();\n    case 'availability':\n      return {\n        enabled: 10,\n        disabled: 0\n      };\n    default:\n      return app.extensionCategories;\n  }\n}\nexport function getVendors() {\n  let vendors = {};\n  let vendorsArray = [];\n  Object.keys(app.data.extensions).map(id => {\n    vendorsArray.push(id.split('-')[0]);\n  });\n  vendorsArray.sort((a, b) => {\n    return a === 'flarum' ? -1 : a > b ? 1 : a === b ? 0 : -1;\n  });\n  let k = vendorsArray.length * 10;\n  vendorsArray.forEach(v => vendors[v] = k -= 10);\n  if (vendors.flarum) vendors.flarum = 5000;\n  return vendors;\n}\nflarum.reg.add('sycho-advanced-extension-categories', 'admin/utils/getCategories', getCategories);","import app from 'flarum/admin/app';\nimport getCategories from './getCategories';\nexport default function getCategoryLabels() {\n  let labels = {};\n  const categories = getCategories();\n  Object.keys(categories).map(category => {\n    switch (app.data.settings['sycho-ace.selected-categorization']) {\n      case 'default':\n        labels[category] = app.translator.trans(\"core.admin.nav.categories.\".concat(category), {}, true);\n        break;\n      case 'vendor':\n        labels[category] = category;\n        break;\n      default:\n        labels[category] = app.translator.trans(\"sycho-ace.admin.categories.\".concat(category), {}, true);\n    }\n  });\n  return labels;\n}\nflarum.reg.add('sycho-advanced-extension-categories', 'admin/utils/getCategoryLabels', getCategoryLabels);","import app from 'flarum/admin/app';\nexport default function getCategorizationOptions() {\n  return {\n    default: app.translator.trans('sycho-ace.admin.category_selection.options.default', {}, true),\n    vendor: app.translator.trans('sycho-ace.admin.category_selection.options.vendor', {}, true),\n    availability: app.translator.trans('sycho-ace.admin.category_selection.options.availability', {}, true),\n    none: app.translator.trans('sycho-ace.admin.category_selection.options.none', {}, true)\n  };\n}\nflarum.reg.add('sycho-advanced-extension-categories', 'admin/utils/getCategorizationOptions', getCategorizationOptions);","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.reg.get('core', 'common/extenders');","import app from 'flarum/admin/app';\nimport Extend from 'flarum/common/extenders';\nimport getCategorizationOptions from './utils/getCategorizationOptions';\nexport default [new Extend.Admin().setting(() => ({\n  setting: 'sycho-ace.selected-categorization',\n  label: app.translator.trans('sycho-ace.admin.category_selection.label'),\n  type: 'select',\n  options: getCategorizationOptions(),\n  default: 'default',\n  refreshAfterSaving: true\n}))];","import app from 'flarum/admin/app';\nimport { override, extend } from 'flarum/common/extend';\nimport AdminNav from 'flarum/admin/components/AdminNav';\nimport ExtensionLinkButton from 'flarum/admin/components/ExtensionLinkButton';\nimport ExtensionsWidget from 'flarum/admin/components/ExtensionsWidget';\nimport LoadingModal from 'flarum/admin/components/LoadingModal';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Button from 'flarum/common/components/Button';\nimport Icon from 'flarum/common/components/Icon';\nimport saveSettings from 'flarum/admin/utils/saveSettings';\nimport getCategorizedExtensions from './utils/getCategorizedExtensions';\nimport getCategories from './utils/getCategories';\nimport getCategoryLabels from './utils/getCategoryLabels';\nimport getCategorizationOptions from './utils/getCategorizationOptions';\nexport { default as extend } from './extend';\napp.initializers.add('sycho-advanced-extension-categories', app => {\n  const categorizationOptions = getCategorizationOptions();\n  app.extensionCategories = getCategories();\n  app.categorizedExtensions = getCategorizedExtensions();\n  app.categoryLabels = getCategoryLabels();\n  ExtensionsWidget.prototype.controlItems = function () {\n    var _app$data$settings$sy;\n    const items = new ItemList();\n    const selectedCategorization = (_app$data$settings$sy = app.data.settings['sycho-ace.selected-categorization']) != null ? _app$data$settings$sy : 'default';\n    items.add('categorization', m(\"div\", {\n      className: \"ExtensionsWidget-control-item\"\n    }, m(Dropdown, {\n      buttonClassName: \"Button\",\n      label: app.translator.trans('sycho-ace.admin.category_selection.label')\n    }, Object.keys(categorizationOptions).map(key => m(Button, {\n      icon: selectedCategorization === key ? 'fas fa-check' : true,\n      active: selectedCategorization === key,\n      onclick: () => {\n        saveSettings({\n          'sycho-ace.selected-categorization': key\n        }).then(() => window.location.reload());\n        app.modal.show(LoadingModal);\n      }\n    }, categorizationOptions[key])))));\n    return items;\n  };\n  override(ExtensionsWidget.prototype, 'oninit', function () {\n    this.categorizedExtensions = app.categorizedExtensions;\n  });\n  override(ExtensionsWidget.prototype, 'content', function (original) {\n    return [m(\"div\", {\n      className: \"ExtensionsWidget-list-heading\"\n    }, m(\"h2\", {\n      className: \"ExtensionsWidget-list-name\"\n    }, m(\"span\", {\n      className: \"ExtensionsWidget-list-icon\"\n    }, m(Icon, {\n      name: \"fas fa-puzzle-piece\"\n    })), m(\"span\", {\n      className: \"ExtensionsWidget-list-title\"\n    }, app.translator.trans('sycho-ace.admin.extensions'))), m(\"div\", {\n      className: \"ExtensionsWidget-list-controls\"\n    }, this.controlItems().toArray())), original()];\n  });\n  extend(ExtensionsWidget.prototype, 'extensionCategory', function (vnode, category) {\n    if (vnode.children instanceof Array && vnode.children[0] instanceof Object && 'children' in vnode.children[0] && vnode.children[0].children instanceof Array && vnode.children[0].children[0] instanceof Object && 'children' in vnode.children[0].children[0]) {\n      vnode.children[0].children[0].children = [app.categoryLabels[category]];\n    }\n  });\n  override(AdminNav.prototype, 'extensionItems', function () {\n    const items = new ItemList();\n    Object.keys(app.categorizedExtensions).map(category => {\n      if (!this.query()) {\n        items.add(\"category-\".concat(category), m(\"h4\", {\n          className: \"ExtensionListTitle\"\n        }, app.categoryLabels[category]), app.extensionCategories[category]);\n      }\n      app.categorizedExtensions[category].map(extension => {\n        var _extension$descriptio;\n        const query = this.query().toUpperCase();\n        const title = extension.extra['flarum-extension'].title;\n        if (!query || title.toUpperCase().includes(query) || (_extension$descriptio = extension.description) != null && _extension$descriptio.toUpperCase().includes(query)) {\n          items.add(\"extension-\".concat(extension.id), m(ExtensionLinkButton, {\n            href: app.route('extension', {\n              id: extension.id\n            }),\n            extensionId: extension.id,\n            className: \"ExtensionNavButton\",\n            title: extension.description\n          }, title), app.extensionCategories[category]);\n        }\n      });\n    });\n    return items;\n  });\n}, -999);"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","reg","getCategorizedExtensions","settings","extensions","none","values","getAlphabeticallyOrderedExtensions","keys","map","id","vendor","split","push","getVendorCategorizedExtensions","enabled","disabled","category","getAvailabilityCategorizedExtensions","getCategories","vendors","vendorsArray","sort","b","k","length","forEach","v","getVendors","getCategoryLabels","labels","categories","trans","concat","getCategorizationOptions","default","availability","add","setting","label","type","options","refreshAfterSaving","app","categorizationOptions","extensionCategories","categorizedExtensions","categoryLabels","controlItems","_app$data$settings$sy","items","selectedCategorization","data","m","className","buttonClassName","translator","icon","active","onclick","then","window","location","reload","modal","show","override","this","original","name","toArray","extend","vnode","children","Array","query","extension","_extension$descriptio","toUpperCase","title","extra","includes","description","href","route","extensionId"],"sourceRoot":""}